#
# Copyright 2019 dialog LLC <info@dlg.im>
#

version: 2

defaults: &defaults
  docker:
    - image: node:10

config_git: &config_git
  name: Configure git
  environment:
    GITHUB_ORIGIN: https://${GITHUB_BOT_TOKEN}@github.com/dialogs/dialog-web-components.git
  command: |
    git config user.name "$GIT_NAME"
    git config user.email "$GIT_EMAIL"
    git remote set-url origin ${GITHUB_ORIGIN}

config_bot: &config_bot
  name: Ð¡onfigure bot
  command: |
    if [ -z "$CIRCLE_PR_USERNAME" -a "$CIRCLE_USERNAME" != "dialog-bot" -a -n "$CIRCLE_USERNAME" ]
    then
      apt-get update
      apt-get install gnupg2 -y
      echo "$GITHUB_BOT_GPG_KEY" | base64 --decode > private.key
      gpg2 --version
      gpg2 --allow-secret-key-import --import private.key
      git config gpg.program gpg2
      git config commit.gpgsign true
      git config user.signingkey "$GITHUB_BOT_GPG_KEY_ID"
      git config credential.helper 'cache --timeout=120'
      git config user.name "$GITHUB_BOT_USERNAME"
      git config user.email "$GITHUB_BOT_EMAIL"
    fi

config_npm: &config_npm
  name: Configure npm
  command: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc

# Jobs
jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *config_npm
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: dialog-components-{{ .Branch }}
          paths:
            - node_modules

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dialog-components-{{ .Branch }}
      - run:
          name: Run tests
          command: npm test

  sonar_scan:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dialog-components-{{ .Branch }}
      - run:
          name: Run Sonar
          command: |
            ./node_modules/.bin/sonar-scanner \
              -Dsonar.projectKey=dialogs_dialog-web-components \
              -Dsonar.organization=dialogs \
              -Dsonar.sources=src/ \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${SONAR_TOKEN}
      - save_cache:
          key: dialog-components-sonar-cube
          paths:
            - ~/.sonar

  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dialog-components-{{ .Branch }}
      - run:
          name: Build package
          command: npm run build
      - save_cache:
          key: dialog-components-{{ .Branch }}
          paths:
            - node_modules

  docs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dialog-components-{{ .Branch }}
      - run:
          <<: *config_git
      - run:
          <<: *config_bot
      - run:
          name: Build docs
          command: npm run docs

  prerelease:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *config_git
      - run:
          <<: *config_bot
      - run:
          <<: *config_npm
      - run:
          name: Publish prerelease
          command: |
            if [ -z "$CIRCLE_PR_USERNAME" -a "$CIRCLE_USERNAME" != "dialog-bot" -a -n "$CIRCLE_USERNAME" ]
            then
              if [ $CIRCLE_BRANCH = "develop" ]
              then
                npm version patch --ignore-scripts
                npm publish --tag="next"
                git push -q --follow-tags ${GITHUB_ORIGIN} ${CIRCLE_BRANCH}
              else
                npm version prerelease --preid=${CIRCLE_BRANCH//[\/_]/-}.${CIRCLE_BUILD_NUM} --ignore-scripts
                npm publish --tag=${CIRCLE_BRANCH}
              fi
            fi

  release:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *config_git
      - run:
          <<: *config_bot
      - run:
          <<: *config_npm
      - run:
          name: Publish release
          command: |
            if [ "$CIRCLE_USERNAME" != "dialog-bot" -a -n "$CIRCLE_USERNAME" ]
            then
              npm version minor --ignore-scripts
              npm publish
              git push -q --follow-tags ${GITHUB_ORIGIN} ${CIRCLE_BRANCH}
            fi


workflows:
  version: 2
  build-deploy:
    jobs:
      - dependencies:
          filters:
            branches:
              ignore:
                - gh-pages
      - test:
          requires:
            - dependencies
          filters:
            branches:
              ignore:
                - gh-pages
      - sonar_scan:
          requires:
            - dependencies
          filters:
            branches:
              ignore:
                - gh-pages
      - build:
          requires:
            - test
          filters:
            branches:
              ignore:
                - gh-pages
      - docs:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - master
      - release:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
      - prerelease:
          requires:
            - test
            - build
          filters:
            branches:
              ignore: master
